# Complete Docker Compose setup with MySQL for Raspberry Pi
version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: contract-crown-mysql
    restart: unless-stopped
    platform: linux/arm64
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-contractcrown123}
      MYSQL_DATABASE: ${DB_NAME:-contract_crown}
      MYSQL_USER: ${DB_USER:-contractcrown}
      MYSQL_PASSWORD: ${DB_PASSWORD:-contractpass}
    volumes:
      - mysql_data:/var/lib/mysql
      # Initialize database schema if available
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "3306:3306"
    networks:
      - contract-crown-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-contractcrown123}"]
      timeout: 20s
      retries: 10
      start_period: 30s

  # Contract Crown Application
  contract-crown:
    image: ${DOCKER_USERNAME:-contractcrown}/contract-crown:${VERSION:-latest}
    container_name: contract-crown
    restart: unless-stopped
    platform: linux/arm64
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-contract_crown}
      DB_USER: ${DB_USER:-contractcrown}
      DB_PASSWORD: ${DB_PASSWORD:-contractpass}
      
      # JWT configuration
      JWT_SECRET: ${JWT_SECRET:-contract-crown-jwt-secret-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      
      # CORS configuration
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      
      # Rate limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # WebSocket configuration
      WS_HEARTBEAT_INTERVAL: ${WS_HEARTBEAT_INTERVAL:-25000}
      WS_HEARTBEAT_TIMEOUT: ${WS_HEARTBEAT_TIMEOUT:-60000}
      
      # Application settings
      MAX_PLAYERS_PER_GAME: ${MAX_PLAYERS_PER_GAME:-4}
      GAME_TIMEOUT_MS: ${GAME_TIMEOUT_MS:-1800000}
      
    ports:
      - "3000:3000"
    volumes:
      # Persistent data storage on Raspberry Pi
      - contract_crown_data:/app/data
      - contract_crown_logs:/app/logs
    networks:
      - contract-crown-network
    healthcheck:
      test: ["CMD", "node", "src/health-check.js"]
      timeout: 10s
      retries: 3
      start_period: 60s
      interval: 30s

volumes:
  mysql_data:
    driver: local
  contract_crown_data:
    driver: local
  contract_crown_logs:
    driver: local

networks:
  contract-crown-network:
    driver: bridge